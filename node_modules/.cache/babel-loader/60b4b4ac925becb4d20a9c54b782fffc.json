{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuanyao/Desktop/revamped-website/my-new-site/src/js/topnav.js\";\nimport '../css/navbar.css';\nimport React from 'react';\n\nclass Topnav extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: false,\n      slide: 0,\n      // How much should the Navbar slide up or down\n      lastScrollY: 0 // Keep track of current position in state\n\n    };\n\n    this.handleScroll = () => {\n      const lastScrollY = this.state.lastScrollY;\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY > lastScrollY) {\n        this.setState({\n          slide: '-48px'\n        });\n      } else {\n        this.setState({\n          slide: '0px'\n        });\n      }\n\n      this.setState({\n        lastScrollY: currentScrollY\n      });\n    };\n  }\n\n  componentWillMount() {\n    // When this component mounts, begin listening for scroll changes\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    // If this component is unmounted, stop listening\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"topnav\",\n      style: {\n        transform: \"translate(0, \".concat(this.state.slide, \")\"),\n        transition: 'transform 0.2s linear'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"li\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Extra-curriculars\")), React.createElement(\"li\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Contact\"))));\n  }\n\n}\n\nexport default Topnav;","map":{"version":3,"sources":["/Users/yuxuanyao/Desktop/revamped-website/my-new-site/src/js/topnav.js"],"names":["React","Topnav","Component","state","auth","slide","lastScrollY","handleScroll","currentScrollY","window","scrollY","setState","componentWillMount","addEventListener","componentWillUnmount","removeEventListener","render","transform","transition"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAEO;AACXC,MAAAA,WAAW,EAAE,CAHT,CAGa;;AAHb,KAFyB;;AAAA,SAkBjCC,YAlBiC,GAkBlB,MAAM;AAAA,YACTD,WADS,GACO,KAAKH,KADZ,CACTG,WADS;AAEjB,YAAME,cAAc,GAAGC,MAAM,CAACC,OAA9B;;AAGA,UAAIF,cAAc,GAAGF,WAArB,EAAkC;AAC9B,aAAKK,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,aAAKM,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH;;AACD,WAAKM,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEE;AAAf,OAAd;AACH,KA7BgC;AAAA;;AAQjCI,EAAAA,kBAAkB,GAAG;AACjB;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,YAAvC;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnB;AACAL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,YAA1C;AACH;;AAgBDS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAE;AACvBC,QAAAA,SAAS,yBAAkB,KAAKd,KAAL,CAAWE,KAA7B,MADc;AAEvBa,QAAAA,UAAU,EAAE;AAFW,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzB,CAFJ,EAGI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAzB,CAHJ,EAII;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAzB,CAJJ,EAKI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAzB,CALJ,CAJJ,CADJ;AAcH;;AA/CgC;;AAkDrC,eAAejB,MAAf","sourcesContent":["import '../css/navbar.css';\nimport React from 'react';\n\nclass Topnav extends React.Component {\n\n    state = {\n        auth: false,\n        slide: 0,  // How much should the Navbar slide up or down\n        lastScrollY: 0,  // Keep track of current position in state\n    };\n\n    componentWillMount() {\n        // When this component mounts, begin listening for scroll changes\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        // If this component is unmounted, stop listening\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = () => {\n        const { lastScrollY } = this.state;\n        const currentScrollY = window.scrollY;\n\n\n        if (currentScrollY > lastScrollY) {\n            this.setState({ slide: '-48px' });\n        } else {\n            this.setState({ slide: '0px' });\n        }\n        this.setState({ lastScrollY: currentScrollY });\n    };\n\n\n    render() {\n        return (\n            <div class=\"topnav\" style={{\n                transform: `translate(0, ${this.state.slide})`,\n                transition: 'transform 0.2s linear',\n            }}>\n                <ul>\n                    <li className=\"navlinks\"><a href=\"#\">Home</a></li>\n                    <li className=\"navlinks\"><a href=\"#\">About</a></li>\n                    <li className=\"navlinks\"><a href=\"#\">Projects</a></li>\n                    <li className=\"navlinks\"><a href=\"#\">Extra-curriculars</a></li>\n                    <li className=\"navlinks\"><a href=\"#\">Contact</a></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Topnav;\n\n"]},"metadata":{},"sourceType":"module"}