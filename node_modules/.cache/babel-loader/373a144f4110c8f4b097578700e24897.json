{"ast":null,"code":"var _jsxFileName = \"/Users/yuxuanyao/Desktop/revamped-website/my-new-site/src/js/banner.js\";\nimport '../css/banner.css';\nimport React from 'react';\n\nclass Banner extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opacity: 0.65,\n      lastScrollY: 0 // Keep track of current position in state\n\n    };\n\n    this.handleScroll = () => {\n      const lastScrollY = this.state.lastScrollY;\n      const currentScrollY = window.scrollY;\n      const elementHeight = this.bannerOverlay.current.offsetHeight;\n      this.setState({\n        opacity: (1 - (elementHeight - document.body.scrollTop) / elementHeight) * 0.8 + 0.2\n      });\n\n      if (currentScrollY > lastScrollY) {\n        this.setState({\n          color: 'rgba(0, 0, 0, 0.4)'\n        });\n      } else {\n        this.setState({\n          color: 'rgba(0, 0, 0, 0.7)'\n        });\n      }\n\n      this.setState({\n        lastScrollY: currentScrollY\n      });\n    };\n  }\n\n  componentDidMount() {\n    // When this component mounts, begin listening for scroll changes\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bannerOverlay\",\n      style: {\n        transition: 'color 6s ease',\n        backgroundColor: \"\".concat(this.state.color)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bannerNameHello\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Hello! I'm \"), React.createElement(\"h1\", {\n      className: \"bannerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Yuxuan Yao\"));\n  }\n\n}\n\nexport default Banner;","map":{"version":3,"sources":["/Users/yuxuanyao/Desktop/revamped-website/my-new-site/src/js/banner.js"],"names":["React","Banner","Component","state","opacity","lastScrollY","handleScroll","currentScrollY","window","scrollY","elementHeight","bannerOverlay","current","offsetHeight","setState","document","body","scrollTop","color","componentDidMount","addEventListener","render","transition","backgroundColor"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,WAAW,EAAE,CAFT,CAEa;;AAFb,KAFyB;;AAAA,SAcjCC,YAdiC,GAclB,MAAM;AAAA,YACTD,WADS,GACO,KAAKF,KADZ,CACTE,WADS;AAEjB,YAAME,cAAc,GAAGC,MAAM,CAACC,OAA9B;AACA,YAAMC,aAAa,GAAG,KAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,YAAjD;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAG,CAAC,IAAI,CAACM,aAAa,GAAGK,QAAQ,CAACC,IAAT,CAAcC,SAA/B,IAA4CP,aAAjD,IAAkE,GAAnE,GAA0E;AAArF,OAAd;;AAEA,UAAIH,cAAc,GAAGF,WAArB,EAAkC;AAC9B,aAAKS,QAAL,CAAc;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,aAAKJ,QAAL,CAAc;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH;;AACD,WAAKJ,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEE;AAAf,OAAd;AACH,KA1BgC;AAAA;;AASjCY,EAAAA,iBAAiB,GAAG;AAChB;AACAX,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkC,KAAKd,YAAvC;AACH;;AAiBDe,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAClCC,QAAAA,UAAU,EAAE,eADsB;AAElCC,QAAAA,eAAe,YAAK,KAAKpB,KAAL,CAAWe,KAAhB;AAFmB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADJ;AAUH;;AAxCgC;;AA2CrC,eAAejB,MAAf","sourcesContent":["import '../css/banner.css';\nimport React from 'react';\n\n\nclass Banner extends React.Component {\n\n    state = {\n        opacity: 0.65,\n        lastScrollY: 0,  // Keep track of current position in state\n    };\n\n\n\n    componentDidMount() {\n        // When this component mounts, begin listening for scroll changes\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = () => {\n        const { lastScrollY } = this.state;\n        const currentScrollY = window.scrollY;\n        const elementHeight = this.bannerOverlay.current.offsetHeight;\n        this.setState({ opacity: ((1 - (elementHeight - document.body.scrollTop) / elementHeight) * 0.8) + 0.2 });\n\n        if (currentScrollY > lastScrollY) {\n            this.setState({ color: 'rgba(0, 0, 0, 0.4)' });\n        } else {\n            this.setState({ color: 'rgba(0, 0, 0, 0.7)' });\n        }\n        this.setState({ lastScrollY: currentScrollY });\n    };\n\n\n    render() {\n        return (\n            <div className=\"bannerOverlay\" style={{\n                transition: 'color 6s ease',\n                backgroundColor: `${this.state.color}`,\n            }\n            }>\n                <h1 className=\"bannerNameHello\">Hello! I'm </h1>\n                <h1 className=\"bannerName\">Yuxuan Yao</h1>\n            </div >\n        );\n    }\n}\n\nexport default Banner;"]},"metadata":{},"sourceType":"module"}